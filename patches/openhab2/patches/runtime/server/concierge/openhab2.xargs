# Concierge start script for Eclipse SmartHome


# configure Concierge
# TODO find best configuration
# -Dorg.eclipse.concierge.debug=true
# -Dorg.eclipse.concierge.log.enabled=true
# -Dorg.eclipse.concierge.log.quiet=false
# -Dorg.eclipse.concierge.log.buffersize=100
# -Dorg.eclipse.concierge.log.level=4 # DEBUG
# -Dorg.eclipse.concierge.debug.bundles=true
# -Dorg.eclipse.concierge.debug.packages=true
# -Dorg.eclipse.concierge.debug.services=true
# -Dorg.eclipse.concierge.debug.classloading=true


# bundle directories
-Ddir=./runtime/server/plugins
-Dconcierge.dir=./runtime/server/concierge


# OSGi properties needed for SmartHome
# TODO make them better readable, line wraps
# com.sun.xml.internal.bind.v2,com.sun.xml.internal.bind.v2.runtime,
-Dorg.osgi.framework.bootdelegation=javax.xml.parsers,org.xml.sax,org.xml.sax.helpers,javax.xml.transform,javax.script,javax.xml.stream,javax.activation,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.transform.dom,org.w3c.dom,javax.xml.namespace,javax.xml.bind,
-Dorg.osgi.framework.system.packages.extra=javax.xml.stream,javax.activation,javax.xml.transform.sax,javax.xml.transform.stream,javax.xml.transform.dom,javax.xml,javax.imageio,javax.imageio.metadata,javax.net,javax.net.ssl,javax.naming,javax.sql,javax.security,javax.security.auth,javax.security.auth.x500,javax.security.cert,javax.crypto,javax.crypto.spec,javax.xml.datatype,javax.xml.namespace,javax.xml.parsers,org.xml.sax,org.xml.sax.helpers,org.xml.sax.ext,org.w3c.dom,org.ietf.jgss


# configure storage directory to ./runtime/server/storage
-Dorg.eclipse.concierge.storage=./runtime/server/storage


# Shell for testing
# TODO disable when Felix gogo is working
-istart ${concierge.dir}/shell-1.0.0.jar


# Concierge extensions, use compendium services from Equinox
-istart ${concierge.dir}/org.eclipse.concierge.extension.permission_1.0.0*.jar
-istart ${dir}/org.eclipse.osgi.services_3.4.0*.jar
-istart ${concierge.dir}/org.eclipse.concierge.service.xmlparser_1.0.0*.jar


# Logging, use slf4j, start logging bundles, but not fragment. ch.qos.logback.slf4j will be started as fragment automatically
-install ${dir}/org.slf4j.api_1.7.2*.jar
-install ${dir}/ch.qos.logback.core_1.0.7*.jar
-install ${dir}/ch.qos.logback.classic_1.0.7*.jar
-install ${dir}/ch.qos.logback.slf4j_1.0.7*.jar
-start ${dir}/org.slf4j.api_1.7.2*.jar
-start ${dir}/ch.qos.logback.core_1.0.7*.jar
-start ${dir}/ch.qos.logback.classic_1.0.7*.jar
-istart ${dir}/org.slf4j.jcl_1.7.2*.jar
-istart ${dir}/org.slf4j.jul_1.7.2*.jar
-istart ${dir}/org.slf4j.log4j_1.7.2*.jar


# Jackson before Jersey
-istart ${dir}/org.codehaus.jackson.core_1.6.0*.jar
-istart ${dir}/org.codehaus.jackson.mapper_1.6.0*.jar


# Common javax packages
# TODO really needed?
#-istart ${dir}/javax.xml_1.3.4*.jar
-istart ${dir}/javax.activation_1.1*.jar
-istart ${dir}/javax.mail_1.4.0*.jar
#-istart ${dir}/javax.xml.stream_1.0.1*.jar
#-istart ${dir}/javax.xml.bind_2.2.0*.jar
-istart ${dir}/javax.servlet_3.1*.jar
-istart ${dir}/javax.inject_1.0.0*.jar
-istart ${dir}/javax.ws.rs_1.1.1*.jar
# TODO use patched version with import package to Jackson
# -istart ${dir}/com.sun.jersey_1.17.0*.jar
-istart ${concierge.dir}/com.sun.jersey_1.17.0*.jar


# Apache libs
-istart ${dir}/org.apache.commons.io_2.0.1*.jar
-istart ${dir}/org.apache.commons.lang_2.6.0*.jar
-istart ${dir}/org.apache.commons.codec_1.6*.jar
-istart ${dir}/org.apache.commons.exec_1.1.0*.jar
# commons logging not needed, as slf4j JCL bridge used
#-istart ${dir}/org.apache.commons.logging_1.1.1*.jar
# TODO hmm: both httpclient 3 and 4?
-istart ${dir}/org.apache.commons.httpclient_3.1.0*.jar
-istart ${dir}/org.apache.commons.net_3.2.0*.jar
-istart ${dir}/org.apache.commons.collections_3.2.0*.jar
-istart ${dir}/org.apache.httpcomponents.httpcore_4.2.5*.jar
-istart ${dir}/org.apache.httpcomponents.httpclient_4.2.6*.jar


# Other libs
-istart ${dir}/com.ibm.icu.base_52.1.0*.jar
-istart ${dir}/org.antlr.runtime_3.2.0*.jar
-istart ${dir}/org.objectweb.asm_5.0.1*.jar
-istart ${dir}/com.google.guava_15.0.0*.jar
-istart ${dir}/com.google.inject_3.0.0*.jar
-istart ${dir}/com.google.gson_2.2.4*.jar


# Felix bundles
# TODO Not needed as Equinox versions will be used at the moment
#-istart ${dir}/org.apache.felix.metatype-1.0.10.jar
#-istart ${dir}/org.apache.felix.configadmin-1.8.0.jar
#-istart ${dir}/org.apache.felix.eventadmin-1.3.2.jar
-istart ${dir}/org.apache.felix.gogo.runtime_0.10.0*.jar
-istart ${dir}/org.apache.felix.gogo.command_0.10.0*.jar
-istart ${dir}/org.apache.felix.gogo.shell_0.10.0*.jar


# Jetty
-istart ${dir}/org.eclipse.jetty.util_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.io_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.http_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.continuation_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.server_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.security_9.2.1*.jar
-istart ${dir}/org.eclipse.equinox.http.servlet_1.1*.jar
-istart ${dir}/org.eclipse.jetty.servlet_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.osgi.httpservice_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.xml_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.webapp_9.2.1*.jar
-istart ${dir}/org.eclipse.jetty.deploy_9.2.1*.jar
# TODO does not work, see exceptions
# -istart ${dir}/org.eclipse.jetty.osgi.boot_9.2.1*.jar
-istart ${concierge.dir}/jetty-osgi-boot-9.2.1.v20140609.jar


# Equinox bundles
# use patched version from Concierge dir
-istart ${concierge.dir}/org.eclipse.equinox.supplement_1.5.100*.jar
-istart ${dir}/org.eclipse.equinox.util_1.0.500*.jar
-istart ${dir}/org.eclipse.equinox.common_3.6.200*.jar
-istart ${dir}/org.eclipse.equinox.ds_1.4.200*.jar
-istart ${dir}/org.eclipse.equinox.event_1.3.100*.jar
# use patched version from Concierge dir
-istart ${concierge.dir}/org.eclipse.equinox.console_1.1.0*.jar
-istart ${dir}/org.eclipse.equinox.registry_3.5.400*.jar
# TODO really needed
# -istart ${dir}/org.eclipse.equinox.cm_1.1.0*.jar
# TODO really needed?
# -istart ${dir}/org.eclipse.equinox.app_1.3.200*.jar
# TODO really needed ???
# -istart ${dir}/org.eclipse.equinox.preferences_3.5.200*.jar


# EMF and xText
-istart ${dir}/org.eclipse.emf.common_2.10*.jar
-istart ${dir}/org.eclipse.emf.ecore_2.10*.jar
-istart ${dir}/org.eclipse.emf.ecore.xmi_2.10*.jar
# TODO really needed???
# -istart ${dir}/org.eclipse.emf.codegen_2.10*.jar
# -istart ${dir}/org.eclipse.emf.codegen.ecore_2.10*.jar
-istart ${dir}/org.eclipse.xtext.util_2.6.1*.jar
# IMPORTANT: install/start com.google.inject inject BEFORE xtext, optional dependency is mandatory
-istart ${dir}/org.eclipse.xtext_2.6.1*.jar
-istart ${dir}/org.eclipse.xtext.common.types_2.6.1*.jar
-istart ${dir}/org.eclipse.xtext.xbase.lib_2.6.1*.jar
-istart ${dir}/org.eclipse.xtend.lib_2.6.1*.jar
-istart ${dir}/org.eclipse.xtext.xbase_2.6.1*.jar
-istart ${dir}/org.eclipse.xtext.smap_2.6.1*.jar
-istart ${dir}/org.eclipse.xtext.util_2.6.1*.jar


# Eclipse SmartHome bundles
-istart ${dir}/org.eclipse.smarthome.core_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.autoupdate_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.library_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.persistence_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.console_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.scheduler_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.scriptengine_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.net_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.config.core_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.thing_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.core.transform_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.monitor_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.servicediscovery_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.storage.mapdb_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.core_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.item_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.persistence_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.script_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.rule_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.sitemap_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.item.runtime_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.persistence.runtime_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.rule.runtime_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.script.runtime_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.sitemap.runtime_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.model.thing_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.ui_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.ui.icon_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.ui.webapp_0.7.0*.jar
# TODO will break when installing
# -istart ${dir}/org.eclipse.smarthome.core.transform_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.rest_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.rest.item_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.rest.sitemap_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.multimedia_0.7.0*.jar
-istart ${dir}/org.eclipse.smarthome.io.transport.mqtt_0.7.0*.jar


# openHAB2 
# TODO
#-istart ${dir}/org.openhab.core.compat1x_2.0.0*.jar
#-istart ${dir}/org.openhab.core_2.0.0*.jar
#-istart ${dir}/org.openhab.io.transport.serial_2.0.0*.jar
#-istart ${dir}/org.openhab.library.tel_2.0.0*.jar


# FileInstall as last bundle to allow to install add-ons
-istart ${dir}/org.apache.felix.fileinstall_3.4.0.jar


# end of script


# TODO really needed?
#-istart ${dir}/org.eclipse.core.commands_3.6.100.v20140528-1422.jar
#-istart ${dir}/org.eclipse.core.contenttype_3.4.200.v20140207-1251.jar
#-istart ${dir}/org.eclipse.core.expressions_3.4.600.v20140128-0851.jar
#-istart ${dir}/org.eclipse.core.filesystem_1.4.100.v20140514-1614.jar
#-istart ${dir}/org.eclipse.core.jobs_3.6.0.v20140424-0053.jar
#-istart ${dir}/org.eclipse.core.resources_3.9.0.v20140514-1307.jar
#-istart ${dir}/org.eclipse.core.runtime_3.10.0.v20140318-2214.jar
#-istart ${dir}/org.eclipse.core.variables_3.2.800.v20130819-1716.jar
#-istart ${dir}/org.eclipse.jdt.debug_3.8.100.v20140522-1618
#-istart ${dir}/org.eclipse.text_3.5.300.v20130515-1451.jar
